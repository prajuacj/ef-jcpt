<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ef.jcpt.trade.dao.TaskInfoMapper">
  <resultMap id="BaseResultMap" type="com.ef.jcpt.trade.dao.model.TaskInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="task_title" jdbcType="VARCHAR" property="taskTitle" />
    <result column="task_desc" jdbcType="VARCHAR" property="taskDesc" />
    <result column="task_imgs" jdbcType="VARCHAR" property="taskImgs" />
    <result column="task_url" jdbcType="VARCHAR" property="taskUrl" />
    <result column="task_status" jdbcType="VARCHAR" property="taskStatus" />
    <result column="task_num" jdbcType="INTEGER" property="taskNum" />
    <result column="reward_type" jdbcType="VARCHAR" property="rewardType" />
    <result column="task_reward" jdbcType="INTEGER" property="taskReward" />
    <result column="publish_user" jdbcType="VARCHAR" property="publishUser" />
    <result column="publish_phone" jdbcType="VARCHAR" property="publishPhone" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="publish_email" jdbcType="VARCHAR" property="publishEmail" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_title, task_desc, task_imgs, task_url, task_status, task_num, reward_type, 
    task_reward, publish_user, publish_phone, publish_time, publish_email, remark, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ef_task_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ef_task_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ef.jcpt.trade.dao.model.TaskInfo">
    insert into ef_task_info (id, task_title, task_desc, 
      task_imgs, task_url, task_status, 
      task_num, reward_type, task_reward, 
      publish_user, publish_phone, publish_time, 
      publish_email, remark, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{taskTitle,jdbcType=VARCHAR}, #{taskDesc,jdbcType=VARCHAR}, 
      #{taskImgs,jdbcType=VARCHAR}, #{taskUrl,jdbcType=VARCHAR}, #{taskStatus,jdbcType=VARCHAR}, 
      #{taskNum,jdbcType=INTEGER}, #{rewardType,jdbcType=VARCHAR}, #{taskReward,jdbcType=INTEGER}, 
      #{publishUser,jdbcType=VARCHAR}, #{publishPhone,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{publishEmail,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ef.jcpt.trade.dao.model.TaskInfo">
    insert into ef_task_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskTitle != null">
        task_title,
      </if>
      <if test="taskDesc != null">
        task_desc,
      </if>
      <if test="taskImgs != null">
        task_imgs,
      </if>
      <if test="taskUrl != null">
        task_url,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="taskNum != null">
        task_num,
      </if>
      <if test="rewardType != null">
        reward_type,
      </if>
      <if test="taskReward != null">
        task_reward,
      </if>
      <if test="publishUser != null">
        publish_user,
      </if>
      <if test="publishPhone != null">
        publish_phone,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="publishEmail != null">
        publish_email,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskTitle != null">
        #{taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskDesc != null">
        #{taskDesc,jdbcType=VARCHAR},
      </if>
      <if test="taskImgs != null">
        #{taskImgs,jdbcType=VARCHAR},
      </if>
      <if test="taskUrl != null">
        #{taskUrl,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="taskNum != null">
        #{taskNum,jdbcType=INTEGER},
      </if>
      <if test="rewardType != null">
        #{rewardType,jdbcType=VARCHAR},
      </if>
      <if test="taskReward != null">
        #{taskReward,jdbcType=INTEGER},
      </if>
      <if test="publishUser != null">
        #{publishUser,jdbcType=VARCHAR},
      </if>
      <if test="publishPhone != null">
        #{publishPhone,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishEmail != null">
        #{publishEmail,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ef.jcpt.trade.dao.model.TaskInfo">
    update ef_task_info
    <set>
      <if test="taskTitle != null">
        task_title = #{taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskDesc != null">
        task_desc = #{taskDesc,jdbcType=VARCHAR},
      </if>
      <if test="taskImgs != null">
        task_imgs = #{taskImgs,jdbcType=VARCHAR},
      </if>
      <if test="taskUrl != null">
        task_url = #{taskUrl,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="taskNum != null">
        task_num = #{taskNum,jdbcType=INTEGER},
      </if>
      <if test="rewardType != null">
        reward_type = #{rewardType,jdbcType=VARCHAR},
      </if>
      <if test="taskReward != null">
        task_reward = #{taskReward,jdbcType=INTEGER},
      </if>
      <if test="publishUser != null">
        publish_user = #{publishUser,jdbcType=VARCHAR},
      </if>
      <if test="publishPhone != null">
        publish_phone = #{publishPhone,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishEmail != null">
        publish_email = #{publishEmail,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ef.jcpt.trade.dao.model.TaskInfo">
    update ef_task_info
    set task_title = #{taskTitle,jdbcType=VARCHAR},
      task_desc = #{taskDesc,jdbcType=VARCHAR},
      task_imgs = #{taskImgs,jdbcType=VARCHAR},
      task_url = #{taskUrl,jdbcType=VARCHAR},
      task_status = #{taskStatus,jdbcType=VARCHAR},
      task_num = #{taskNum,jdbcType=INTEGER},
      reward_type = #{rewardType,jdbcType=VARCHAR},
      task_reward = #{taskReward,jdbcType=INTEGER},
      publish_user = #{publishUser,jdbcType=VARCHAR},
      publish_phone = #{publishPhone,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      publish_email = #{publishEmail,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="obtainTask">
  	select 
    <include refid="Base_Column_List" />
    from ef_task_info
    where task_status='1' and id not in (select task_id from ef_received_task where received_user=#{userName,jdbcType=VARCHAR} group by task_id) order by create_time desc limit #{next},1
  </select>
</mapper>