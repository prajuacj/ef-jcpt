<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ef.jcpt.trade.dao.ChargingOrderMapper">
  <resultMap id="BaseResultMap" type="com.ef.jcpt.trade.dao.model.ChargingOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_flow" jdbcType="VARCHAR" property="payFlow" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="operator_nation_code" jdbcType="VARCHAR" property="operatorNationCode" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone_model" jdbcType="VARCHAR" property="phoneModel" />
    <result column="init_flow" jdbcType="INTEGER" property="initFlow" />
    <result column="used_flow" jdbcType="INTEGER" property="usedFlow" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pay_flow, order_id, operator_id, operator_name, operator_nation_code, device_id, 
    user_name, phone_model, init_flow, used_flow, start_time, end_time, create_time, 
    update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ef_charging_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ef_charging_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ef.jcpt.trade.dao.model.ChargingOrder">
    insert into ef_charging_order (id, pay_flow, order_id, 
      operator_id, operator_name, operator_nation_code, 
      device_id, user_name, phone_model, 
      init_flow, used_flow, start_time, 
      end_time, create_time, update_time, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{payFlow,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{operatorId,jdbcType=INTEGER}, #{operatorName,jdbcType=VARCHAR}, #{operatorNationCode,jdbcType=VARCHAR}, 
      #{deviceId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{phoneModel,jdbcType=VARCHAR}, 
      #{initFlow,jdbcType=INTEGER}, #{usedFlow,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ef.jcpt.trade.dao.model.ChargingOrder">
    insert into ef_charging_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payFlow != null">
        pay_flow,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="operatorNationCode != null">
        operator_nation_code,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="phoneModel != null">
        phone_model,
      </if>
      <if test="initFlow != null">
        init_flow,
      </if>
      <if test="usedFlow != null">
        used_flow,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payFlow != null">
        #{payFlow,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="operatorNationCode != null">
        #{operatorNationCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null">
        #{phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="initFlow != null">
        #{initFlow,jdbcType=INTEGER},
      </if>
      <if test="usedFlow != null">
        #{usedFlow,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ef.jcpt.trade.dao.model.ChargingOrder">
    update ef_charging_order
    <set>
      <if test="payFlow != null">
        pay_flow = #{payFlow,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorName != null">
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="operatorNationCode != null">
        operator_nation_code = #{operatorNationCode,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phoneModel != null">
        phone_model = #{phoneModel,jdbcType=VARCHAR},
      </if>
      <if test="initFlow != null">
        init_flow = #{initFlow,jdbcType=INTEGER},
      </if>
      <if test="usedFlow != null">
        used_flow = #{usedFlow,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ef.jcpt.trade.dao.model.ChargingOrder">
    update ef_charging_order
    set pay_flow = #{payFlow,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=INTEGER},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      operator_nation_code = #{operatorNationCode,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      phone_model = #{phoneModel,jdbcType=VARCHAR},
      init_flow = #{initFlow,jdbcType=INTEGER},
      used_flow = #{usedFlow,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>